{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  token: null,\n  isAuthenticated: false\n};\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveToken(state, {\n      payload\n    }) {\n      if (payload) {\n        state.token = payload;\n      }\n    },\n\n    clearToken(state) {\n      state.token = null;\n    },\n\n    setAuthState(state, {\n      payload\n    }) {\n      state.isAuthenticated = payload;\n    }\n\n  }\n});\nexport const {\n  saveToken,\n  clearToken,\n  setAuthState\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/features/auth/authSlice.ts"],"names":["createSlice","initialState","token","isAuthenticated","auth","name","reducers","saveToken","state","payload","clearToken","setAuthState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAOA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,IADuB;AAE9BC,EAAAA,eAAe,EAAE;AAFa,CAAhC;AAKA,MAAMC,IAAI,GAAGJ,WAAW,CAAC;AACvBK,EAAAA,IAAI,EAAE,MADiB;AAEvBJ,EAAAA,YAFuB;AAGvBK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA4C;AACnD,UAAIA,OAAJ,EAAa;AACXD,QAAAA,KAAK,CAACN,KAAN,GAAcO,OAAd;AACD;AACF,KALO;;AAMRC,IAAAA,UAAU,CAACF,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACD,KARO;;AASRS,IAAAA,YAAY,CAACH,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA6C;AACvDD,MAAAA,KAAK,CAACL,eAAN,GAAwBM,OAAxB;AACD;;AAXO;AAHa,CAAD,CAAxB;AAkBA,OAAO,MAAM;AAAEF,EAAAA,SAAF;AAAaG,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,IAA0CP,IAAI,CAACQ,OAArD;AAEP,eAAeR,IAAI,CAACS,OAApB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface AuthState {\n  token: string | null;\n  isAuthenticated: boolean;\n}\n\nconst initialState: AuthState = {\n  token: null,\n  isAuthenticated: false,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveToken(state, { payload }: PayloadAction<string>) {\n      if (payload) {\n        state.token = payload;\n      }\n    },\n    clearToken(state) {\n      state.token = null;\n    },\n    setAuthState(state, { payload }: PayloadAction<boolean>) {\n      state.isAuthenticated = payload;\n    },\n  },\n});\n\nexport const { saveToken, clearToken, setAuthState } = auth.actions;\n\nexport default auth.reducer;\n"]},"metadata":{},"sourceType":"module"}