{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst diaries = createSlice({\n  name: 'diaries',\n  initialState: [],\n  reducers: {\n    addDiary(state, {\n      payload\n    }) {\n      const diariesToSave = payload.filter(diary => {\n        return state.findIndex(item => item.id === diary.id) === -1;\n      });\n      state.push(...diariesToSave);\n    },\n\n    updateDiary(state, {\n      payload\n    }) {\n      const {\n        id\n      } = payload;\n      const diaryIndex = state.findIndex(diary => diary.id === id);\n\n      if (diaryIndex !== -1) {\n        state.splice(diaryIndex, 1, payload);\n      }\n    }\n\n  }\n});\nexport const {\n  addDiary,\n  updateDiary\n} = diaries.actions;\nexport default diaries.reducer;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/diary/DiariesSlice.ts"],"names":["createSlice","diaries","name","initialState","reducers","addDiary","state","payload","diariesToSave","filter","diary","findIndex","item","id","push","updateDiary","diaryIndex","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,MAAMC,OAAO,GAAGD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,YAAY,EAAE,EAFU;AAGxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA6C;AACjD,YAAMC,aAAa,GAAGD,OAAO,CAACE,MAAR,CAAgBC,KAAD,IAAW;AAC5C,eAAOJ,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,KAAK,CAACG,EAA5C,MAAoD,CAAC,CAA5D;AACH,OAFqB,CAAtB;AAGAP,MAAAA,KAAK,CAACQ,IAAN,CAAW,GAAGN,aAAd;AACH,KANK;;AAONO,IAAAA,WAAW,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA2C;AAClD,YAAM;AAAEM,QAAAA;AAAF,UAASN,OAAf;AACA,YAAMS,UAAU,GAAGV,KAAK,CAACK,SAAN,CAAiBD,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaA,EAAxC,CAAnB;;AACA,UAAIG,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBV,QAAAA,KAAK,CAACW,MAAN,CAAaD,UAAb,EAAyB,CAAzB,EAA4BT,OAA5B;AACH;AACJ;;AAbK;AAHc,CAAD,CAA3B;AAoBA,OAAO,MAAM;AAAEF,EAAAA,QAAF;AAAYU,EAAAA;AAAZ,IAA4Bd,OAAO,CAACiB,OAA1C;AACP,eAAejB,OAAO,CAACkB,OAAvB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Diary } from '../../Interfaces/diary.interface';\n\nconst diaries = createSlice({\n    name: 'diaries',\n    initialState: [] as Diary[],\n    reducers: {\n        addDiary(state, { payload }: PayloadAction<Diary[]>) {\n            const diariesToSave = payload.filter((diary) => {\n                return state.findIndex((item) => item.id === diary.id) === -1;\n            });\n            state.push(...diariesToSave);\n        },\n        updateDiary(state, { payload }: PayloadAction<Diary>) {\n            const { id } = payload;\n            const diaryIndex = state.findIndex((diary) => diary.id === id);\n            if (diaryIndex !== -1) {\n                state.splice(diaryIndex, 1, payload);\n            }\n        },\n    },\n});\n\nexport const { addDiary, updateDiary } = diaries.actions;\nexport default diaries.reducer;"]},"metadata":{},"sourceType":"module"}