{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  token: null,\n  isAuthenticated: false\n};\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveToken(state, {\n      payload\n    }) {\n      if (payload) {\n        state.token = payload;\n      }\n    },\n\n    clearToken(state) {\n      state.token = null;\n    },\n\n    setAuthState(state, {\n      payload\n    }) {\n      state.isAuthenticated = payload;\n    }\n\n  }\n});\nexport const {\n  saveToken,\n  clearToken,\n  setAuthState\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/auth/AuthSlice.ts"],"names":["createSlice","initialState","token","isAuthenticated","auth","name","reducers","saveToken","state","payload","clearToken","setAuthState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAOA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,IADqB;AAE5BC,EAAAA,eAAe,EAAE;AAFW,CAAhC;AAKA,MAAMC,IAAI,GAAGJ,WAAW,CAAC;AACrBK,EAAAA,IAAI,EAAE,MADe;AAErBJ,EAAAA,YAFqB;AAGrBK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAqB;AAC1B,UAAIA,OAAJ,EAAa;AACTD,QAAAA,KAAK,CAACN,KAAN,GAAcO,OAAd;AACH;AACJ,KALK;;AAMNC,IAAAA,UAAU,CAACF,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACH,KARK;;AASNS,IAAAA,YAAY,CAACH,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAqB;AAC7BD,MAAAA,KAAK,CAACL,eAAN,GAAwBM,OAAxB;AACH;;AAXK;AAHW,CAAD,CAAxB;AAkBA,OAAO,MAAM;AAAEF,EAAAA,SAAF;AAAaG,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,IAA0CP,IAAI,CAACQ,OAArD;AACP,eAAeR,IAAI,CAACS,OAApB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\ninterface AuthState {\n    token: string | null;\n    isAuthenticated: boolean;\n}\n\nconst initialState: AuthState = {\n    token: null,\n    isAuthenticated: false,\n};\n\nconst auth = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        saveToken(state, { payload }) {\n            if (payload) {\n                state.token = payload;\n            }\n        },\n        clearToken(state) {\n            state.token = null;\n        },\n        setAuthState(state, { payload }) {\n            state.isAuthenticated = payload;\n        },\n    },\n});\n\nexport const { saveToken, clearToken, setAuthState } = auth.actions;\nexport default auth.reducer;"]},"metadata":{},"sourceType":"module"}