{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/diary/DiaryTile.tsx\";\nimport React, { useState } from 'react';\nimport http from '../../Services/api/api';\nimport { updateDiary } from './DiariesSlice';\nimport { setCanEdit, setActiveDiaryId, setCurrentlyEditing } from '../entry/EditorSlice';\nimport { showAlert } from '../../utils/util';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch } from '../../store';\nconst buttonStyle = {\n  fontSize: '0.7em',\n  margin: '0 0.5em'\n};\n\nconst DiaryTile = props => {\n  var _props$diary, _props$diary$entryIds;\n\n  const [diary, setDiary] = useState(props.diary);\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useAppDispatch();\n  const totalEntries = (_props$diary = props.diary) === null || _props$diary === void 0 ? void 0 : (_props$diary$entryIds = _props$diary.entryIds) === null || _props$diary$entryIds === void 0 ? void 0 : _props$diary$entryIds.length;\n\n  const saveChanges = () => {\n    http.put(`/diaries/${diary.id}`, diary).then(diary => {\n      if (diary) {\n        dispatch(updateDiary(diary));\n        showAlert('Saved!', 'success');\n      }\n    }).finally(() => {\n      setIsEditing(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"diary-tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    title: \"Click to edit\",\n    onClick: () => setIsEditing(true),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(\"input\", {\n    value: diary.title,\n    onChange: e => {\n      setDiary({ ...diary,\n        title: e.target.value\n      });\n    },\n    onKeyUp: e => {\n      if (e.key === 'Enter') {\n        saveChanges();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, diary.title)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, totalEntries !== null && totalEntries !== void 0 ? totalEntries : '0', \" saved entries\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: buttonStyle,\n    onClick: () => {\n      dispatch(setCanEdit(true));\n      dispatch(setActiveDiaryId(diary.id));\n      dispatch(setCurrentlyEditing(null));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Add New Entry\"), /*#__PURE__*/React.createElement(Link, {\n    to: `diary/${diary.id}`,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"View all \\u2192\"))));\n};\n\nexport default DiaryTile;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/diary/DiaryTile.tsx"],"names":["React","useState","http","updateDiary","setCanEdit","setActiveDiaryId","setCurrentlyEditing","showAlert","Link","useAppDispatch","buttonStyle","fontSize","margin","DiaryTile","props","diary","setDiary","isEditing","setIsEditing","dispatch","totalEntries","entryIds","length","saveChanges","put","id","then","finally","cursor","title","e","target","value","key","display","width"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\nimport { Diary } from '../../Interfaces/diary.interface';\nimport http from '../../Services/api/api';\nimport { updateDiary } from './DiariesSlice';\nimport { setCanEdit, setActiveDiaryId, setCurrentlyEditing } from '../entry/EditorSlice';\nimport { showAlert } from '../../utils/util';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch } from '../../store';\n\ninterface Props {\n    diary: Diary;\n}\n\nconst buttonStyle: React.CSSProperties = {\n    fontSize: '0.7em',\n    margin: '0 0.5em',\n};\n\nconst DiaryTile: FC<Props> = (props) => {\n    const [diary, setDiary] = useState(props.diary);\n    const [isEditing, setIsEditing] = useState(false);\n    const dispatch = useAppDispatch();\n    const totalEntries = props.diary?.entryIds?.length;\n\n    const saveChanges = () => {\n        http\n            .put<Diary, Diary>(`/diaries/${diary.id}`, diary)\n            .then((diary) => {\n                if (diary) {\n                    dispatch(updateDiary(diary));\n                    showAlert('Saved!', 'success');\n                }\n            })\n            .finally(() => {\n                setIsEditing(false);\n            });\n    };\n\n    return (\n        <div className=\"diary-tile\">\n            <h2\n                className=\"title\"\n                title=\"Click to edit\"\n                onClick={() => setIsEditing(true)}\n                style={{\n                    cursor: 'pointer',\n                }}\n            >\n                {isEditing ? (\n                    <input\n                        value={diary.title}\n                        onChange={(e) => {\n                            setDiary({\n                                ...diary,\n                                title: e.target.value,\n                            });\n                        }}\n                        onKeyUp={(e) => {\n                            if (e.key === 'Enter') {\n                                saveChanges();\n                            }\n                        }}\n                    />\n                ) : (\n                        <span>{diary.title}</span>\n                    )}\n            </h2>\n            <p className=\"subtitle\">{totalEntries ?? '0'} saved entries</p>\n            <div style={{ display: 'flex' }}>\n                <button\n                    style={buttonStyle}\n                    onClick={() => {\n                        dispatch(setCanEdit(true));\n                        dispatch(setActiveDiaryId(diary.id as string));\n                        dispatch(setCurrentlyEditing(null));\n                    }}\n                >\n                    Add New Entry\n        </button>\n                <Link to={`diary/${diary.id}`} style={{ width: '100%' }}>\n                    <button className=\"secondary\" style={buttonStyle}>\n                        View all â†’\n          </button>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default DiaryTile;\n"]},"metadata":{},"sourceType":"module"}