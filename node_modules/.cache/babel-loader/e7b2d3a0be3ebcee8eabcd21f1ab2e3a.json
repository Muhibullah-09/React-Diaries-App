{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/diary/DiaryEntriesList.tsx\";\nimport React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport http from '../../Services/api/api';\nimport { setEntries } from '../entry/EntriesSlice';\nimport { setCurrentlyEditing, setCanEdit } from '../entry/EditorSlice';\nimport dayjs from 'dayjs';\nimport { useAppDispatch } from '../../store';\n\nconst DiaryEntriesList = () => {\n  const {\n    entries\n  } = useSelector(state => state);\n  const dispatch = useAppDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id != null) {\n      http.get(`/diaries/entries/${id}`).then(({\n        entries: _entries\n      }) => {\n        if (_entries) {\n          const sortByLastUpdated = _entries.sort((a, b) => {\n            return dayjs(b.updatedAt).unix() - dayjs(a.updatedAt).unix();\n          });\n\n          dispatch(setEntries(sortByLastUpdated));\n        }\n      });\n    }\n  }, [id, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"\\u2190 Go Back\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, entries.map(entry => /*#__PURE__*/React.createElement(\"li\", {\n    key: entry.id,\n    onClick: () => {\n      dispatch(setCurrentlyEditing(entry));\n      dispatch(setCanEdit(true));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, entry.title))));\n};\n\nexport default DiaryEntriesList;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/diary/DiaryEntriesList.tsx"],"names":["React","useEffect","useParams","Link","useSelector","http","setEntries","setCurrentlyEditing","setCanEdit","dayjs","useAppDispatch","DiaryEntriesList","entries","state","dispatch","id","get","then","_entries","sortByLastUpdated","sort","a","b","updatedAt","unix","map","entry","title"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,sBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,MAAMC,gBAAoB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcR,WAAW,CAAES,KAAD,IAAsBA,KAAvB,CAA/B;AACA,QAAMC,QAAQ,GAAGJ,cAAc,EAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAASb,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,EAAE,IAAI,IAAV,EAAgB;AACZV,MAAAA,IAAI,CACCW,GADL,CACsC,oBAAmBD,EAAG,EAD5D,EAEKE,IAFL,CAEU,CAAC;AAAEL,QAAAA,OAAO,EAAEM;AAAX,OAAD,KAA2B;AAC7B,YAAIA,QAAJ,EAAc;AACV,gBAAMC,iBAAiB,GAAGD,QAAQ,CAACE,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9C,mBAAOb,KAAK,CAACa,CAAC,CAACC,SAAH,CAAL,CAAmBC,IAAnB,KAA4Bf,KAAK,CAACY,CAAC,CAACE,SAAH,CAAL,CAAmBC,IAAnB,EAAnC;AACH,WAFyB,CAA1B;;AAGAV,UAAAA,QAAQ,CAACR,UAAU,CAACa,iBAAD,CAAX,CAAR;AACH;AACJ,OATL;AAUH;AACJ,GAbQ,EAaN,CAACJ,EAAD,EAAKD,QAAL,CAbM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACa,GAAR,CAAaC,KAAD,iBACT;AACI,IAAA,GAAG,EAAEA,KAAK,CAACX,EADf;AAEI,IAAA,OAAO,EAAE,MAAM;AACXD,MAAAA,QAAQ,CAACP,mBAAmB,CAACmB,KAAD,CAApB,CAAR;AACAZ,MAAAA,QAAQ,CAACN,UAAU,CAAC,IAAD,CAAX,CAAR;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKkB,KAAK,CAACC,KAPX,CADH,CADL,CANJ,CADJ;AAsBH,CA1CD;;AA4CA,eAAehB,gBAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/rootreducer';\nimport http from '../../Services/api/api';\nimport { Entry } from '../../Interfaces/entry.interface';\nimport { setEntries } from '../entry/EntriesSlice';\nimport { setCurrentlyEditing, setCanEdit } from '../entry/EditorSlice';\nimport dayjs from 'dayjs';\nimport { useAppDispatch } from '../../store';\n\nconst DiaryEntriesList: FC = () => {\n    const { entries } = useSelector((state: RootState) => state);\n    const dispatch = useAppDispatch();\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (id != null) {\n            http\n                .get<null, { entries: Entry[] }>(`/diaries/entries/${id}`)\n                .then(({ entries: _entries }) => {\n                    if (_entries) {\n                        const sortByLastUpdated = _entries.sort((a, b) => {\n                            return dayjs(b.updatedAt).unix() - dayjs(a.updatedAt).unix();\n                        });\n                        dispatch(setEntries(sortByLastUpdated));\n                    }\n                });\n        }\n    }, [id, dispatch]);\n\n    return (\n        <div className=\"entries\">\n            <header>\n                <Link to=\"/\">\n                    <h3>‚Üê Go Back</h3>\n                </Link>\n            </header>\n            <ul>\n                {entries.map((entry) => (\n                    <li\n                        key={entry.id}\n                        onClick={() => {\n                            dispatch(setCurrentlyEditing(entry));\n                            dispatch(setCanEdit(true));\n                        }}\n                    >\n                        {entry.title}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default DiaryEntriesList;"]},"metadata":{},"sourceType":"module"}