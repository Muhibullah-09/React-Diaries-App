{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\Documents\\\\GitHub\\\\React-Diaries-App\\\\src\\\\features\\\\diary\\\\DiaryTile.tsx\";\nimport React, { useState } from 'react';\nimport http from '../../services/api';\nimport { updateDiary } from './diariesSlice';\nimport { setCanEdit, setActiveDiaryId, setCurrentlyEditing } from '../entry/editorSlice';\nimport { showAlert } from '../../util';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch } from '../../store';\nconst buttonStyle = {\n  fontSize: '0.7em',\n  margin: '0 0.5em'\n};\n\nconst DiaryTile = props => {\n  var _props$diary, _props$diary$entryIds;\n\n  const [diary, setDiary] = useState(props.diary);\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useAppDispatch();\n  const totalEntries = (_props$diary = props.diary) === null || _props$diary === void 0 ? void 0 : (_props$diary$entryIds = _props$diary.entryIds) === null || _props$diary$entryIds === void 0 ? void 0 : _props$diary$entryIds.length;\n\n  const saveChanges = () => {\n    http.put(`/diaries/${diary.id}`, diary).then(diary => {\n      if (diary) {\n        dispatch(updateDiary(diary));\n        showAlert('Saved!', 'success');\n      }\n    }).finally(() => {\n      setIsEditing(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"diary-tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    title: \"Click to edit\",\n    onClick: () => setIsEditing(true),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(\"input\", {\n    value: diary.title,\n    onChange: e => {\n      setDiary({ ...diary,\n        title: e.target.value\n      });\n    },\n    onKeyUp: e => {\n      if (e.key === 'Enter') {\n        saveChanges();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, diary.title)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, totalEntries !== null && totalEntries !== void 0 ? totalEntries : '0', \" saved entries\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: buttonStyle,\n    onClick: () => {\n      dispatch(setCanEdit(true));\n      dispatch(setActiveDiaryId(diary.id));\n      dispatch(setCurrentlyEditing(null));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Add New Entry\"), /*#__PURE__*/React.createElement(Link, {\n    to: `diary/${diary.id}`,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"View all \\u2192\"))));\n};\n\nexport default DiaryTile;","map":{"version":3,"sources":["C:/Users/Ehsan/Documents/GitHub/React-Diaries-App/src/features/diary/DiaryTile.tsx"],"names":["React","useState","http","updateDiary","setCanEdit","setActiveDiaryId","setCurrentlyEditing","showAlert","Link","useAppDispatch","buttonStyle","fontSize","margin","DiaryTile","props","diary","setDiary","isEditing","setIsEditing","dispatch","totalEntries","entryIds","length","saveChanges","put","id","then","finally","cursor","title","e","target","value","key","display","width"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport http from '../../services/api';\r\nimport { updateDiary } from './diariesSlice';\r\nimport {\r\n  setCanEdit,\r\n  setActiveDiaryId,\r\n  setCurrentlyEditing,\r\n} from '../entry/editorSlice';\r\nimport { showAlert } from '../../util';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../store';\r\n\r\ninterface Props {\r\n  diary: Diary;\r\n}\r\n\r\nconst buttonStyle: React.CSSProperties = {\r\n  fontSize: '0.7em',\r\n  margin: '0 0.5em',\r\n};\r\n\r\nconst DiaryTile: FC<Props> = (props) => {\r\n  const [diary, setDiary] = useState(props.diary);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const totalEntries = props.diary?.entryIds?.length;\r\n\r\n  const saveChanges = () => {\r\n    http\r\n      .put<Diary, Diary>(`/diaries/${diary.id}`, diary)\r\n      .then((diary) => {\r\n        if (diary) {\r\n          dispatch(updateDiary(diary));\r\n          showAlert('Saved!', 'success');\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setIsEditing(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"diary-tile\">\r\n      <h2\r\n        className=\"title\"\r\n        title=\"Click to edit\"\r\n        onClick={() => setIsEditing(true)}\r\n        style={{\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {isEditing ? (\r\n          <input\r\n            value={diary.title}\r\n            onChange={(e) => {\r\n              setDiary({\r\n                ...diary,\r\n                title: e.target.value,\r\n              });\r\n            }}\r\n            onKeyUp={(e) => {\r\n              if (e.key === 'Enter') {\r\n                saveChanges();\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <span>{diary.title}</span>\r\n        )}\r\n      </h2>\r\n      <p className=\"subtitle\">{totalEntries ?? '0'} saved entries</p>\r\n\r\n      <div style={{ display: 'flex' }}>\r\n        <button\r\n          style={buttonStyle}\r\n          onClick={() => {\r\n            dispatch(setCanEdit(true));\r\n            dispatch(setActiveDiaryId(diary.id as string));\r\n            dispatch(setCurrentlyEditing(null));\r\n          }}\r\n        >\r\n          Add New Entry\r\n        </button>\r\n        <Link to={`diary/${diary.id}`} style={{ width: '100%' }}>\r\n          <button className=\"secondary\" style={buttonStyle}>\r\n            View all &rarr;\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryTile;\r\n"]},"metadata":{},"sourceType":"module"}