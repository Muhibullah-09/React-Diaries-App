{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/entry/Editor.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Markdown from 'markdown-to-jsx';\nimport http from '../../Services/api/api';\nimport { setCurrentlyEditing, setCanEdit } from './EditorSlice';\nimport { updateDiary } from '../diary/DiariesSlice';\nimport { updateEntry } from './EntriesSlice';\nimport { showAlert } from '../../utils/util';\nimport { useAppDispatch } from '../../store';\n\nconst Editor = () => {\n  var _editedEntry$title, _editedEntry$content;\n\n  const {\n    currentlyEditing: entry,\n    canEdit,\n    activeDiaryId\n  } = useSelector(state => state.editor);\n  const [editedEntry, updateEditedEntry] = useState(entry);\n  const dispatch = useAppDispatch();\n\n  const saveEntry = async () => {\n    if (activeDiaryId == null) {\n      return showAlert('Please select a diary.', 'warning');\n    }\n\n    if (entry == null) {\n      http.post(`/diaries/entry/${activeDiaryId}`, editedEntry).then(data => {\n        if (data != null) {\n          const {\n            diary,\n            entry: _entry\n          } = data;\n          dispatch(setCurrentlyEditing(_entry));\n          dispatch(updateDiary(diary));\n        }\n      });\n    } else {\n      http.put(`diaries/entry/${entry.id}`, editedEntry).then(_entry => {\n        if (_entry != null) {\n          dispatch(setCurrentlyEditing(_entry));\n          dispatch(updateEntry(_entry));\n        }\n      });\n    }\n\n    dispatch(setCanEdit(false));\n  };\n\n  useEffect(() => {\n    updateEditedEntry(entry);\n  }, [entry]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      marginBottom: '0.2em',\n      paddingBottom: '0.2em',\n      borderBottom: '1px solid rgba(0,0,0,0.1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, entry && !canEdit ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, entry.title, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#edit\",\n    onClick: e => {\n      e.preventDefault();\n\n      if (entry != null) {\n        dispatch(setCanEdit(true));\n      }\n    },\n    style: {\n      marginLeft: '0.4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"(Edit)\")) : /*#__PURE__*/React.createElement(\"input\", {\n    value: (_editedEntry$title = editedEntry === null || editedEntry === void 0 ? void 0 : editedEntry.title) !== null && _editedEntry$title !== void 0 ? _editedEntry$title : '',\n    disabled: !canEdit,\n    onChange: e => {\n      if (editedEntry) {\n        updateEditedEntry({ ...editedEntry,\n          title: e.target.value\n        });\n      } else {\n        updateEditedEntry({\n          title: e.target.value,\n          content: ''\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), entry && !canEdit ? /*#__PURE__*/React.createElement(Markdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, entry.content) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", {\n    disabled: !canEdit,\n    placeholder: \"Supports markdown!\",\n    value: (_editedEntry$content = editedEntry === null || editedEntry === void 0 ? void 0 : editedEntry.content) !== null && _editedEntry$content !== void 0 ? _editedEntry$content : '',\n    onChange: e => {\n      if (editedEntry) {\n        updateEditedEntry({ ...editedEntry,\n          content: e.target.value\n        });\n      } else {\n        updateEditedEntry({\n          title: '',\n          content: e.target.value\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveEntry,\n    disabled: !canEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"Save\")));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/React-Diaries-App/src/Features/entry/Editor.tsx"],"names":["React","useState","useEffect","useSelector","Markdown","http","setCurrentlyEditing","setCanEdit","updateDiary","updateEntry","showAlert","useAppDispatch","Editor","currentlyEditing","entry","canEdit","activeDiaryId","state","editor","editedEntry","updateEditedEntry","dispatch","saveEntry","post","then","data","diary","_entry","put","id","display","flexWrap","alignItems","marginBottom","paddingBottom","borderBottom","title","e","preventDefault","marginLeft","target","value","content"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/rootreducer';\nimport Markdown from 'markdown-to-jsx';\nimport http from '../../Services/api/api';\nimport { Entry } from '../../Interfaces/entry.interface';\nimport { Diary } from '../../Interfaces/diary.interface';\nimport { setCurrentlyEditing, setCanEdit } from './EditorSlice';\nimport { updateDiary } from '../diary/DiariesSlice';\nimport { updateEntry } from './EntriesSlice';\nimport { showAlert } from '../../utils/util';\nimport { useAppDispatch } from '../../store';\n\nconst Editor: FC = () => {\n    const { currentlyEditing: entry, canEdit, activeDiaryId } = useSelector(\n        (state: RootState) => state.editor\n    );\n    const [editedEntry, updateEditedEntry] = useState(entry);\n    const dispatch = useAppDispatch();\n\n    const saveEntry = async () => {\n        if (activeDiaryId == null) {\n            return showAlert('Please select a diary.', 'warning');\n        }\n        if (entry == null) {\n            http\n                .post<Entry, { diary: Diary; entry: Entry }>(\n                    `/diaries/entry/${activeDiaryId}`,\n                    editedEntry\n                )\n                .then((data) => {\n                    if (data != null) {\n                        const { diary, entry: _entry } = data;\n                        dispatch(setCurrentlyEditing(_entry));\n                        dispatch(updateDiary(diary));\n                    }\n                });\n        } else {\n            http\n                .put<Entry, Entry>(`diaries/entry/${entry.id}`, editedEntry)\n                .then((_entry) => {\n                    if (_entry != null) {\n                        dispatch(setCurrentlyEditing(_entry));\n                        dispatch(updateEntry(_entry));\n                    }\n                });\n        }\n        dispatch(setCanEdit(false));\n    };\n\n    useEffect(() => {\n        updateEditedEntry(entry);\n    }, [entry]);\n\n    return (\n        <div className=\"editor\">\n            <header\n                style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    alignItems: 'center',\n                    marginBottom: '0.2em',\n                    paddingBottom: '0.2em',\n                    borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }}\n            >\n                {entry && !canEdit ? (\n                    <h4>\n                        {entry.title}\n                        <a\n                            href=\"#edit\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                if (entry != null) {\n                                    dispatch(setCanEdit(true));\n                                }\n                            }}\n                            style={{ marginLeft: '0.4em' }}\n                        >\n                            (Edit)\n            </a>\n                    </h4>\n                ) : (\n                        <input\n                            value={editedEntry?.title ?? ''}\n                            disabled={!canEdit}\n                            onChange={(e) => {\n                                if (editedEntry) {\n                                    updateEditedEntry({\n                                        ...editedEntry,\n                                        title: e.target.value,\n                                    });\n                                } else {\n                                    updateEditedEntry({\n                                        title: e.target.value,\n                                        content: '',\n                                    });\n                                }\n                            }}\n                        />\n                    )}\n            </header>\n            {entry && !canEdit ? (\n                <Markdown>{entry.content}</Markdown>\n            ) : (\n                    <>\n                        <textarea\n                            disabled={!canEdit}\n                            placeholder=\"Supports markdown!\"\n                            value={editedEntry?.content ?? ''}\n                            onChange={(e) => {\n                                if (editedEntry) {\n                                    updateEditedEntry({\n                                        ...editedEntry,\n                                        content: e.target.value,\n                                    });\n                                } else {\n                                    updateEditedEntry({\n                                        title: '',\n                                        content: e.target.value,\n                                    });\n                                }\n                            }}\n                        />\n                        <button onClick={saveEntry} disabled={!canEdit}>\n                            Save\n          </button>\n                    </>\n                )}\n        </div>\n    );\n};\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}