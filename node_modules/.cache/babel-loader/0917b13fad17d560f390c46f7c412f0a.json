{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst entries = createSlice({\n  name: 'entries',\n  initialState: [],\n  reducers: {\n    setEntries(state, {\n      payload\n    }) {\n      return state = payload != null ? payload : [];\n    },\n\n    updateEntry(state, {\n      payload\n    }) {\n      const {\n        id\n      } = payload;\n      const index = state.findIndex(e => e.id === id);\n\n      if (index !== -1) {\n        state.splice(index, 1, payload);\n      }\n    }\n\n  }\n});\nexport const {\n  setEntries,\n  updateEntry\n} = entries.actions;\nexport default entries.reducer; // The reducer functions here have logic similar to the previous slice’s reducer functions. \n// The entries property is also an array, but it only holds entries for a single diary. In our app, \n// this will be the diary currently in the user’s focus.\n// Finally, create a file named editorSlice.ts in src/features/entry and add the following to it:","map":{"version":3,"sources":["C:/Users/Ehsan/Documents/GitHub/React-Diaries-App/src/features/entry/entriesSlice.ts"],"names":["createSlice","entries","name","initialState","reducers","setEntries","state","payload","updateEntry","id","index","findIndex","e","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,MAAMC,OAAO,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,SADoB;AAE1BC,EAAAA,YAAY,EAAE,EAFY;AAG1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAoD;AAC5D,aAAQD,KAAK,GAAGC,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B,EAA5C;AACD,KAHO;;AAIRC,IAAAA,WAAW,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA2C;AACpD,YAAM;AAAEE,QAAAA;AAAF,UAASF,OAAf;AACA,YAAMG,KAAK,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAAhC,CAAd;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBJ,QAAAA,KAAK,CAACO,MAAN,CAAaH,KAAb,EAAoB,CAApB,EAAuBH,OAAvB;AACD;AACF;;AAVO;AAHgB,CAAD,CAA3B;AAkBA,OAAO,MAAM;AAAEF,EAAAA,UAAF;AAAcG,EAAAA;AAAd,IAA8BP,OAAO,CAACa,OAA5C;AACP,eAAeb,OAAO,CAACc,OAAvB,C,CACA;AACA;AACA;AACA","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Entry } from '../../interfaces/entry.interface';\r\n\r\n\r\nconst entries = createSlice({\r\n  name: 'entries',\r\n  initialState: [] as Entry[],\r\n  reducers: {\r\n    setEntries(state, { payload }: PayloadAction<Entry[] | null>) {\r\n      return (state = payload != null ? payload : []);\r\n    },\r\n    updateEntry(state, { payload }: PayloadAction<Entry>) {\r\n      const { id } = payload;\r\n      const index = state.findIndex((e) => e.id === id);\r\n      if (index !== -1) {\r\n        state.splice(index, 1, payload);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const { setEntries, updateEntry } = entries.actions;\r\nexport default entries.reducer;\r\n// The reducer functions here have logic similar to the previous slice’s reducer functions. \r\n// The entries property is also an array, but it only holds entries for a single diary. In our app, \r\n// this will be the diary currently in the user’s focus.\r\n// Finally, create a file named editorSlice.ts in src/features/entry and add the following to it:"]},"metadata":{},"sourceType":"module"}