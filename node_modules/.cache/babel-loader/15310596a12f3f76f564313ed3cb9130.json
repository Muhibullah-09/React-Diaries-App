{"ast":null,"code":"import axios from 'axios';\nimport { showAlert } from '../util';\nconst http = axios.create({\n  baseURL: 'https://diaries.app'\n});\nhttp.defaults.headers.post['Content-Type'] = 'application/json';\nhttp.interceptors.response.use(async response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response.data;\n  }\n}, error => {\n  const {\n    response,\n    request\n  } = error;\n\n  if (response) {\n    if (response.status >= 400 && response.status < 500) {\n      var _response$data, _response$data$data;\n\n      showAlert((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.message, 'error');\n      return null;\n    }\n  } else if (request) {\n    showAlert('Request failed. Please try again.', 'error');\n    return null;\n  }\n\n  return Promise.reject(error);\n});\nexport default http;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/diaries-app/src/services/api.ts"],"names":["axios","showAlert","http","create","baseURL","defaults","headers","post","interceptors","response","use","status","data","error","request","message","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAgE,OAAhE;AACA,SAASC,SAAT,QAA0B,SAA1B;AAEA,MAAMC,IAAmB,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvCC,EAAAA,OAAO,EAAE;AAD8B,CAAb,CAA5B;AAIAF,IAAI,CAACG,QAAL,CAAcC,OAAd,CAAsBC,IAAtB,CAA2B,cAA3B,IAA6C,kBAA7C;AAEAL,IAAI,CAACM,YAAL,CAAkBC,QAAlB,CAA2BC,GAA3B,CACE,MAAOD,QAAP,IAAiD;AAC/C,MAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAnB,IAA0BF,QAAQ,CAACE,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOF,QAAQ,CAACG,IAAhB;AACD;AACF,CALH,EAMGC,KAAD,IAAuB;AACrB,QAAM;AACJJ,IAAAA,QADI;AAEJK,IAAAA;AAFI,MAGsDD,KAH5D;;AAIA,MAAIJ,QAAJ,EAAc;AACZ,QAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAnB,IAA0BF,QAAQ,CAACE,MAAT,GAAkB,GAAhD,EAAqD;AAAA;;AACnDV,MAAAA,SAAS,mBAACQ,QAAQ,CAACG,IAAV,0EAAC,eAAeA,IAAhB,wDAAC,oBAAqBG,OAAtB,EAA+B,OAA/B,CAAT;AACA,aAAO,IAAP;AACD;AACF,GALD,MAKO,IAAID,OAAJ,EAAa;AAClBb,IAAAA,SAAS,CAAC,mCAAD,EAAsC,OAAtC,CAAT;AACA,WAAO,IAAP;AACD;;AACD,SAAOe,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CArBH;AAwBA,eAAeX,IAAf","sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\nimport { showAlert } from '../util';\n\nconst http: AxiosInstance = axios.create({\n  baseURL: 'https://diaries.app',\n});\n\nhttp.defaults.headers.post['Content-Type'] = 'application/json';\n\nhttp.interceptors.response.use(\n  async (response: AxiosResponse): Promise<any> => {\n    if (response.status >= 200 && response.status < 300) {\n      return response.data;\n    }\n  },\n  (error: AxiosError) => {\n    const {\n      response,\n      request,\n    }: { response?: AxiosResponse; request?: XMLHttpRequest } = error;\n    if (response) {\n      if (response.status >= 400 && response.status < 500) {\n        showAlert(response.data?.data?.message, 'error');\n        return null;\n      }\n    } else if (request) {\n      showAlert('Request failed. Please try again.', 'error');\n      return null;\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default http;\n"]},"metadata":{},"sourceType":"module"}